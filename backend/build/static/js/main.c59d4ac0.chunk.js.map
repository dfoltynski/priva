{"version":3,"sources":["components/send-icon.svg","components/StyledComponents.js","components/RoomDecide.js","components/RoomCreate.js","components/JoinRoom.js","components/Chat.js","components/Nickname.js","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","fill","d","_ref","svgRef","title","props","focusable","className","role","viewBox","ref","ForwardRef","forwardRef","Wrapper","styled","section","BackgroundPanel","div","Notification","p","Button","button","ButtonArea","ButtonText","LinkButton","Link","ResponseField","input","ChatField","MessageField","Username","Message","SendField","InputMessage","SendButton","attrs","type","Form","form","SendIconStyle","SendIcon","RoomDecide","to","RoomCreate","useState","setKey","useEffect","socket","socketIOClient","emit","on","value","disabled","onClick","document","querySelectorAll","navigator","clipboard","writeText","querySelector","style","fontSize","e","nickname","trim","alert","focus","preventDefault","localStorage","setItem","JoinRoom","providedKey","Chat","state","connectedUsers","disconnectedUsers","user","messages","validateMessage","bind","getItem","setState","username","msg","window","location","removeItem","message","scrollTop","scrollHeight","map","connectedUser","disconnectedUser","onSubmit","placeholder","Component","Nickname","width","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c59d4ac0.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M476 3.2L12.5 270.6c-18.1 10.4-15.8 35.6 2.2 43.2L121 358.4l287.3-253.2c5.5-4.9 13.3 2.6 8.6 8.3L176 407v80.5c0 23.6 28.5 32.9 42.5 15.8L282 426l124.6 52.2c14.2 6 30.4-2.9 33-18.2l72-432C515 7.8 493.3-6.8 476 3.2z\"\n});\n\nvar SvgSendIcon = function SvgSendIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"paper-plane\",\n    className: \"svg-inline--fa fa-paper-plane fa-w-16\",\n    role: \"img\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSendIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/send-icon.56611ebb.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ReactComponent as SendIcon } from \"./send-icon.svg\";\r\n\r\nexport const Wrapper = styled.section`\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const BackgroundPanel = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    text-align: center;\r\n    width: 80%;\r\n    height: 65%;\r\n    background: #0b0b0b;\r\n    border: 2px solid #95003f;\r\n`;\r\n\r\nexport const Notification = styled.p`\r\n    font-size: 35px;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 24px;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    text-decoration: none;\r\n    padding: 0 1em;\r\n    margin: 0 1em;\r\n    width: 25em;\r\n    background: none;\r\n    margin-bottom: 1em;\r\n    border: 2px solid #95003f;\r\n    transition: 0.13s ease-in-out;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        transition: 0.13s ease-in-out;\r\n        background: #95003f;\r\n    }\r\n`;\r\n\r\nexport const ButtonArea = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: row;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const ButtonText = styled.p`\r\n    font-size: 24px;\r\n    color: #ffffff;\r\n`;\r\n\r\nexport const LinkButton = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    text-decoration: none;\r\n    padding: 0 1em;\r\n    margin: 0 1em;\r\n    width: 25em;\r\n    background: none;\r\n    border: 2px solid #95003f;\r\n    transition: 0.13s ease-in-out;\r\n\r\n    &:hover {\r\n        transition: 0.13s ease-in-out;\r\n        background: #95003f;\r\n    }\r\n\r\n    @media only screen and (max-width: 1333px) {\r\n        width: 10em;\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        // width: 8em;\r\n    }\r\n`;\r\n\r\nexport const ResponseField = styled.input`\r\n    color: #ffffff;\r\n    font-size: 24px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n    outline: none;\r\n    width: 90%;\r\n    height: 2em;\r\n    background: #95003f;\r\n    border-radius: 25px;\r\n    border: none;\r\n`;\r\n\r\nexport const ChatField = styled.div`\r\n    top: 0;\r\n    position: absolute;\r\n    height: calc(100% - 3rem);\r\n    width: 40%;\r\n    overflow-y: scroll;\r\n    @media only screen and (max-width: 1300px) {\r\n        width: 60%;\r\n    }\r\n\r\n    @media only screen and (max-width: 950px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const MessageField = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Username = styled.p`\r\n    margin: 0.5em 0.5em 0 0.5em;\r\n    font-size: 14px;\r\n    color: #ffffff;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    max-width: 45%;\r\n    margin: 0.2em 0.5em 0 0.5em;\r\n    padding: 0.5em;\r\n    border-radius: 25px;\r\n    display: inline-block;\r\n    background: #95003f;\r\n    // white-space: pre-wrap;\r\n    // white-space: -moz-pre-wrap;\r\n    // white-space: -pre-wrap;\r\n    // white-space: -o-pre-wrap;\r\n    word-wrap: break-word;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nexport const SendField = styled.div`\r\n    display: flex;\r\n    position: absolute;\r\n    align-items: center;\r\n    bottom: 0;\r\n    height: 3em;\r\n    width: 40%;\r\n    background-color: #141414;\r\n\r\n    @media only screen and (max-width: 1300px) {\r\n        width: 60%;\r\n    }\r\n\r\n    @media only screen and (max-width: 950px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const InputMessage = styled.input`\r\n    padding: 0 0.6rem;\r\n    color: #ffffff;\r\n    font-size: 15px;\r\n    margin-left: 0.5rem;\r\n    background: #212121;\r\n    width: 80%;\r\n    height: 2.3rem;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 25px;\r\n`;\r\n\r\nexport const SendButton = styled.button.attrs({ type: \"submit\" })`\r\n    background: #95003f;\r\n    border-radius: 25px;\r\n    border: none;\r\n    padding: 0.2rem 1.5rem;\r\n    margin-left: 0.2rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nexport const SendIconStyle = styled(SendIcon)`\r\n    width: 2em;\r\n    color: #ffffff;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport {\r\n    BackgroundPanel,\r\n    Wrapper,\r\n    Notification,\r\n    LinkButton,\r\n    ButtonArea,\r\n    ButtonText,\r\n} from \"./StyledComponents\";\r\n\r\nconst RoomDecide = () => {\r\n    return (\r\n        <Wrapper>\r\n            <BackgroundPanel>\r\n                <Notification>Room?</Notification>\r\n                <ButtonArea>\r\n                    <LinkButton to=\"/create\">\r\n                        <ButtonText>Create</ButtonText>\r\n                    </LinkButton>\r\n                    <LinkButton to=\"/join\">\r\n                        <ButtonText>Join</ButtonText>\r\n                    </LinkButton>\r\n                </ButtonArea>\r\n            </BackgroundPanel>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default RoomDecide;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport {\r\n    BackgroundPanel,\r\n    Wrapper,\r\n    Notification,\r\n    LinkButton,\r\n    ButtonText,\r\n    ResponseField,\r\n    Button,\r\n    ButtonArea,\r\n} from \"./StyledComponents\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:8080\";\r\n\r\nconst RoomCreate = () => {\r\n    const [key, setKey] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const socket = socketIOClient(ENDPOINT);\r\n\r\n        socket.emit(\"genKey\");\r\n\r\n        socket.on(\"getKey\", (key) => {\r\n            setKey(key);\r\n        });\r\n    }, []);\r\n\r\n    const copyToClipboard = () => {\r\n        if (document.querySelectorAll(\"input\")[0].value !== \"\") {\r\n            navigator.clipboard.writeText(\r\n                document.querySelector(\"input\").value\r\n            );\r\n        }\r\n    };\r\n\r\n    const simpleValidation = (e) => {\r\n        const nickname = document.querySelectorAll(\"input\")[1];\r\n\r\n        if (nickname.value.trim() === \"\") {\r\n            alert(\"You need to type your nickname...\");\r\n            nickname.value = \"\";\r\n            nickname.focus();\r\n\r\n            e.preventDefault();\r\n        } else {\r\n            localStorage.setItem(\"key\", key);\r\n            localStorage.setItem(\"username\", nickname.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <BackgroundPanel>\r\n                <Notification>Your room key</Notification>\r\n                <ButtonArea>\r\n                    <ResponseField value={key} disabled />\r\n                    <Button onClick={copyToClipboard}>\r\n                        <ButtonText style={{ fontSize: \"16px\" }}>\r\n                            Copy to clipboard\r\n                        </ButtonText>\r\n                    </Button>\r\n                </ButtonArea>\r\n                <Notification>Type your nickname</Notification>\r\n                <ButtonArea>\r\n                    <ResponseField />\r\n                    <LinkButton onClick={simpleValidation} to=\"/your-room\">\r\n                        <ButtonText>Join to your room</ButtonText>\r\n                    </LinkButton>\r\n                </ButtonArea>\r\n            </BackgroundPanel>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default RoomCreate;\r\n","import React, { useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport {\r\n    BackgroundPanel,\r\n    Wrapper,\r\n    Notification,\r\n    LinkButton,\r\n    ButtonText,\r\n    ResponseField,\r\n    Button,\r\n    ButtonArea,\r\n} from \"./StyledComponents\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:8080\";\r\n\r\nconst JoinRoom = () => {\r\n    const simpleValidation = (e) => {\r\n        const providedKey = document.querySelectorAll(\"input\")[0];\r\n        const nickname = document.querySelectorAll(\"input\")[1];\r\n\r\n        if (nickname.value.trim() === \"\" || providedKey.value === \"\") {\r\n            alert(\"Enter your room key and nickname\");\r\n            nickname.value = \"\";\r\n            nickname.focus();\r\n\r\n            e.preventDefault();\r\n        } else {\r\n            localStorage.setItem(\"key\", providedKey.value);\r\n            localStorage.setItem(\"username\", nickname.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <BackgroundPanel>\r\n                <Notification>Your room key</Notification>\r\n                <ResponseField />\r\n                <Notification>Type your nickname</Notification>\r\n                <ButtonArea>\r\n                    <ResponseField />\r\n                    <LinkButton onClick={simpleValidation} to=\"/your-room\">\r\n                        <ButtonText>Join to your room</ButtonText>\r\n                    </LinkButton>\r\n                </ButtonArea>\r\n            </BackgroundPanel>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default JoinRoom;\r\n","import React, { Component } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport {\r\n    Wrapper,\r\n    ChatField,\r\n    MessageField,\r\n    Username,\r\n    Message,\r\n    SendField,\r\n    InputMessage,\r\n    SendButton,\r\n    SendIconStyle,\r\n    Form,\r\n} from \"./StyledComponents\";\r\n\r\nconst socket = socketIOClient();\r\n\r\nclass Chat extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            connectedUsers: [],\r\n            disconnectedUsers: [],\r\n            user: \"\",\r\n            messages: [],\r\n        };\r\n\r\n        this.validateMessage = this.validateMessage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!localStorage.getItem(\"key\")) {\r\n            window.location = \"/\";\r\n        } else {\r\n            socket.emit(\"joinRoom\", localStorage.getItem(\"key\"));\r\n            socket.emit(\"newUser\", localStorage.getItem(\"username\"));\r\n            let user = localStorage.getItem(\"username\");\r\n            this.setState({ user });\r\n\r\n            socket.on(\"userConnected\", (username) => {\r\n                this.setState({\r\n                    connectedUsers: [...this.state.connectedUsers, username],\r\n                });\r\n            });\r\n\r\n            socket.on(\"message\", (msg, username) => {\r\n                this.setState({\r\n                    messages: [...this.state.messages, { msg, username }],\r\n                });\r\n            });\r\n\r\n            socket.on(\"disconnected\", (username) => {\r\n                this.setState({\r\n                    disconnectedUsers: [\r\n                        ...this.state.disconnectedUsers,\r\n                        username,\r\n                    ],\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        localStorage.removeItem(\"key\");\r\n        localStorage.removeItem(\"username\");\r\n    }\r\n\r\n    validateMessage(e) {\r\n        e.preventDefault();\r\n        const message = document.querySelector(\"input\");\r\n        if (message.value.trim() === \"\") {\r\n            message.value = \"\";\r\n            message.focus();\r\n        } else {\r\n            socket.emit(\"message\", message.value, this.state.user);\r\n            message.value = \"\";\r\n            message.focus();\r\n            document.querySelectorAll(\r\n                \"div\"\r\n            )[2].scrollTop = document.querySelectorAll(\"div\")[2].scrollHeight;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper>\r\n                <ChatField>\r\n                    {this.state.connectedUsers.map((connectedUser) => (\r\n                        <MessageField>\r\n                            <Username>\r\n                                {connectedUser} has join the chat\r\n                            </Username>\r\n                        </MessageField>\r\n                    ))}\r\n\r\n                    {this.state.messages.map((message) => (\r\n                        <MessageField>\r\n                            <Username>{message[\"username\"]}</Username>\r\n                            <Message>{message[\"msg\"]}</Message>\r\n                        </MessageField>\r\n                    ))}\r\n\r\n                    {this.state.disconnectedUsers.map((disconnectedUser) => (\r\n                        <MessageField>\r\n                            <Username>\r\n                                {disconnectedUser} has left the chat\r\n                            </Username>\r\n                        </MessageField>\r\n                    ))}\r\n                </ChatField>\r\n\r\n                <SendField>\r\n                    <Form onSubmit={this.validateMessage}>\r\n                        <InputMessage placeholder=\"Type a message...\" />\r\n                        <SendButton>\r\n                            <SendIconStyle />\r\n                        </SendButton>\r\n                    </Form>\r\n                </SendField>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport {\r\n    BackgroundPanel,\r\n    Wrapper,\r\n    Notification,\r\n    LinkButton,\r\n    ButtonText,\r\n    ResponseField,\r\n    Button,\r\n} from \"./StyledComponents\";\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:8080\";\r\n\r\nconst Nickname = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    const simpleValidation = (e) => {\r\n        const nickname = document.querySelector(\"input\");\r\n\r\n        if (nickname.value.trim() === \"\") {\r\n            alert(\"You need to type your nickname...\");\r\n            nickname.value = \"\";\r\n            nickname.focus();\r\n\r\n            e.preventDefault();\r\n        } else {\r\n            const socket = socketIOClient(ENDPOINT);\r\n\r\n            socket.emit(\"newUser\", username);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <BackgroundPanel>\r\n                <Notification>Type your nickname</Notification>\r\n                <ResponseField style={{ width: \"45%\" }} />\r\n                <LinkButton onClick={simpleValidation} to=\"/your-room\">\r\n                    <ButtonText>Join to your room</ButtonText>\r\n                </LinkButton>\r\n            </BackgroundPanel>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Nickname;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { RoomDecide, RoomCreate, Nickname, JoinRoom, Chat } from \"./components\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path=\"/\" component={RoomDecide} />\n                <Route exact path=\"/create\" component={RoomCreate} />\n                <Route exact path=\"/join\" component={JoinRoom} />\n                <Route exact path=\"/your-room\" component={Chat} />\n                <Route exact path=\"/nickname\" component={Nickname} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <Router>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}